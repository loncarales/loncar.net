---
# tasks file for acme

- name: Check if acme.sh is installed
  shell: "~/.acme.sh/acme.sh --version"
  failed_when: false
  changed_when: false
  register: acme_check

- name: "Install acme.sh Let's Encrypt client"
  shell: "curl https://get.acme.sh | sh"
  args:
    warn: false
  when: acme_check.rc != 0 or acme_check.failed | default(false)

- name: DNS API integration and generating a certificates via CloudFlare Domain API  
  shell: "~/.acme.sh/acme.sh --issue --dns dns_cf --ocsp-must-staple --keylength 4096 -d {{ domain_name }} -d '*.{{ domain_name }}' --force"
  failed_when: false
  register: certificates_check
  environment:
    CF_TOKEN: "{{ cf_token }}"

- name: Certificates not issued
  debug:
    msg: "{{ certificates_check.stdout }}"
  when: certificates_check.rc != 0 or certificates_check.failed | default(false)

- name: Ensure certs directory exists
  file:
    state: directory
    path: "{{ ssl_certs_directory }}"

- name:  Installing the certificate to target folder
  shell: '~/.acme.sh/acme.sh --install-cert -d {{ domain_name }} -d "*.{{ domain_name }}" \
    --fullchain-file "{{ ssl_certs_directory }}/fullchain.pem" \
    --key-file "{{ ssl_certs_directory }}/privkey.pem"  \
    --reloadcmd "systemctl reload nginx.service"'
